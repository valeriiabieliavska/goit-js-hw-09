{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAGtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAKPR,EAAKgB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAYC,OAAOjB,EAAMkB,OACzBC,EAAWF,OAAOhB,EAAKiB,OACvBE,EAAcH,OAAOf,EAAOgB,OAChC,IAAKG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrClB,EAAckB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAALX,MACjBa,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAU0B,EAAKP,EAALX,MAClBa,EAAA9B,GAAS+B,OAAOK,QAAQ,sBAAuCH,OAAfxB,EAAS,QAAYwB,OAANE,EAAM,M,IAErEd,GAAaG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  });\n}\n\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  let timeDelay = Number(delay.value);\n  let timeStep = Number(step.value);\n  let valueAmount = Number(amount.value);\n  for (i = 1; i <= valueAmount; i += 1) {\ncreatePromise(i, timeDelay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    timeDelay += timeStep;\n  }\n}\n\n\n\n\n\n\n\n\n\n// resolve(value) - функція для виклику у разі успішної операції. \n// Переданий їй аргумент буде значенням виконаного промісу.\n//   reject(error) - функція для виклику у разі помилки. \n// Переданий їй аргумент буде значенням відхиленого промісу.\n\n//  в методі then() обробляють тільки успішне виконання промісу,\n//   а помилку його виконання у спеціальному методі catch () для «відловлювання» помилок.\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів,\n//   скільки ввели в поле amount.Під час кожного виклику передай їй номер промісу(position),\n//   що створюється, і затримку, враховуючи першу затримку(delay), введену користувачем, і крок(step).\n\n//   Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється \n//   через delay часу.Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay\n//    зі значеннями однойменних параметрів. \n//   Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\n\n// Notiflix.Notify.success - успех\n// Notiflix.Notify.failure - неудача\n// Первая задержка\n// Шаг задержки\n// Количество"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","event","preventDefault","timeDelay","Number","value","timeStep","valueAmount","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.ed1a4801.js.map"}